<Window x:Class="HearthCollect.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HearthCollect"
        mc:Ignorable="d"
        Title="HearthCollect" SizeToContent="Width" Height="800">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:RarityToColorConverter x:Key="RarityToColorConverter" />
        <local:ClassToColorConverter x:Key="ClassToColorConverter"/>
        <CollectionViewSource x:Key="viewSource" Source="{Binding Cards}"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <DataGrid Name="dataGrid" ItemsSource="{Binding Source={StaticResource viewSource}}" IsReadOnly="True" SelectedIndex="-1"
                  AutoGenerateColumns="False" Grid.Column="1" Grid.ColumnSpan="1" Focusable="False" SelectionMode="Single" CanUserResizeRows="False">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding ID}" Header="ID"/>
                <DataGridTextColumn Binding="{Binding Normal}" Header="Normal"/>
                <DataGridTextColumn Binding="{Binding Golden}" Header="Golden"/>
                <DataGridTextColumn Binding="{Binding Total}" Header="Total"/>
                <DataGridTextColumn Binding="{Binding Name}" Header="Name"/>
                <DataGridTextColumn Binding="{Binding Set}" Header="Set"/>
                <DataGridTextColumn Binding="{Binding CardClass}" Header="Class"/>
                <DataGridTemplateColumn Header="Rarity" SortMemberPath="Rarity">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Run Foreground="{Binding Rarity, Converter={StaticResource RarityToColorConverter}}" Text="{Binding Rarity}"/>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Type}" Header="Type"/>
                <DataGridTextColumn Binding="{Binding Race}" Header="Race"/>
                <DataGridTextColumn Binding="{Binding Cost}" Header="Cost"/>
                <DataGridTextColumn Binding="{Binding Attack}" Header="Attack"/>
                <DataGridTextColumn Binding="{Binding Health}" Header="Health"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Border BorderThickness="0" Background="BlanchedAlmond" Padding="5">
                        <TextBlock local:TextAttached.RichText="{Binding Text}"/>
                    </Border>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding CardClass, Converter={StaticResource ClassToColorConverter}}"/>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        <StackPanel Grid.Column="0" Grid.ColumnSpan="1" HorizontalAlignment="Center" VerticalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Focusable" Value="False"/>
                </Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Focusable" Value="False"/>
                </Style>
            </StackPanel.Resources>
            <Button x:Name="btnSync" Content="Sync" Command="{Binding SynchronizeCollectionCommand}" Width="75"/>
            <Button x:Name="btnAll" Content="All" Width="75" Click="btnAll_Click"/>
            <Button x:Name="btnNone" Content="None" Width="75" Click="btnNone_Click"/>
            <ToggleButton x:Name="btnOwned" Content="Owned" Width="75" Click="FilterRefresh" IsChecked="True"/>
            <ToggleButton x:Name="btnMissing" Content="Missing" Width="75" Click="FilterRefresh" IsChecked="True"/>
            <ToggleButton x:Name="btnCore" Content="Core" Width="75" Click="FilterRefresh" IsChecked="True"/>
            <ToggleButton x:Name="btnExpert" Content="Expert" Width="75" Click="FilterRefresh" IsChecked="True"/>
            <StackPanel Name="stkWild">
                <Button Name="btnWild" Content="Wild" Width="75" Click="btnAll_Click"/>
                <ToggleButton x:Name="btnNaxx" Content="Naxx" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnGvG" Content="GvG" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnBRM" Content="BRM" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnTGT" Content="TGT" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnLoE" Content="LoE" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnHoF" Content="HoF" Width="75" Click="FilterRefresh" IsChecked="True"/>
            </StackPanel>
            <StackPanel Name="stkStandard">
                <Button Name="btnStandard" Content="Standard" Width="75" Click="btnAll_Click"/>
                <ToggleButton x:Name="btnOG" Content="OG" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnKara" Content="Karazhan" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnGangs" Content="Gangs" Width="75" Click="FilterRefresh" IsChecked="True"/>
                <ToggleButton x:Name="btnUngoro" Content="Ungoro" Width="75" Click="FilterRefresh" IsChecked="True"/>
            </StackPanel>
            <ToggleButton x:Name="btnHero" Content="Hero" Width="75" Click="FilterRefresh"/>
            <TextBlock Text="{Binding DustValue, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <TextBlock Text="{Binding ExcessDust, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <TextBlock Text="{Binding ExcessDustIgnoreGolden, RelativeSource={RelativeSource AncestorType=Window}}"/>
        </StackPanel>
    </Grid>
</Window>
